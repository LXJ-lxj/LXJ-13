#驱动
JDBC.driver=com.mysql.cj.jdbc.Driver
#URL:jdbc:mysql://localhost:3306为固定格式，包括域名、端口。spring_test为数据库名称，可根据自己的创建的数据库名称进行修改
JDBC.url=jdbc:mysql:///testdb
#用户名
JDBC.username=root
#密码
JDBC.password=MEC0l8yGeVzyr4VMnZQcMPlyN2UYILNZT45GTImrjHIkle7XP+XejOC1IuDmYduy0DQvIMU8axPml5mhExB1jg==
JDBC.publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKidPGIzQYpppiuO3VJ74xLKKwupQJOXgYmxgWJWyULMjgoOFnwSLE9SUWrNMgJDUHxhoJc7jERnzyVDQD+nwa0CAwEAAQ==
JDBC.filters=stat,config
JDBC.connectionProperties=config.decrypt=true;config.decrypt.key=${JDBC.publicKey}
#mariaDB.validationQuery="SELECT count(1) FROM t_user_1"


#druid生成密文密码的步骤：
#1、先找到druid的jar所存放的位置，默认使用maven情况下，是在maven的本地仓库中
#cd /home.lxj/.m2/repository/com/alibaba/druid/1.1.10
#2、根据明文密码执行以下命令，运行druid 的jar包当中的加密程序；
#java -cp ${你的本地仓库路径}/opt/.m2/repository/com/alibaba/druid/1.1.10/druid-1.1.10.jar com.alibaba.druid.filter.config.ConfigTools root（你的数据库明文密码）
#3、将生成的publickey和password的密文，复制到代码的配置文件中
#使用com.alibaba.druid.filter.config.ConfigTools进行加密和解密工具类